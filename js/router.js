App.routers.Router = Backbone.Router.extend({

  routes : {
    "" : "home",
    "project/:id" : "project"
  },


  home : function(){
    

    App.projects = new App.collections.Projects();

    this.createSampleProject();

    App.projects.fetch({
      success : function(){
        var projectsView = new App.views.ProjectsView({ collection : App.projects});

        $("#surface").html(projectsView.render().el);    
      }
    });

    $("body").removeClass("blue-bg");
    
  },



  project : function(id){

    if(App.projects && App.projects.get(id)){
          this.setupTasksView(id)
    } else {
      App.projects = new App.collections.Projects();  
      App.projects.fetch({
        success : $.proxy(function(){
          this.setupTasksView(id);     
        }, this)
      });
    }

    $("body").addClass("blue-bg");
    
  },


  setupTasksView : function(id){
      var project = App.projects.get(id);
      if(project){
        var tasksView = new App.views.TasksView({collection : project.tasks, project : project});
        $("#surface").html(tasksView.render().el);
      }
  },


  createSampleProject : function(){
    if(!localStorage.getItem('projects')){
      var project = App.projects.create({name : "Sample Project", description : "This is dummy project created for you to get started!"});
      var t1 = project.tasks.create({title : "Review : Assignment by Sachin", description : "For front end developer position"});
      var t2 = project.tasks.create({title : "Bug : Reports not working", description : "Reports for ARPU are not generated by system"});
      var t21 = project.tasks.create({title : "Bug : Build not working", description : "Connection to DB is timing out frequently"});
      var t3 = project.tasks.create({title : "Dev : Anonymous Login feature", state : "doing", description : "This feature allows user to proceed without login"});
      var t4 = project.tasks.create({title : "Git : merge branches for release", state : "done", description : "Pending for approval"});
    }
  }


});